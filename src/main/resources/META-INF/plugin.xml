<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>YapiResultGenerate</id>
    <version>1.0</version>
    <depends>com.intellij.modules.java</depends>
    <idea-version since-build="2024.1.7" />
    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="l1401098954@gmail.com" url="https://github.com/LiuGuanXin/YapiGenerate">yapi</vendor>
    <name>Yapi Generate</name>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    This plugin helps developers automatically generate Yapi-compatible JSON structures and documentation based on Java entity classes in IntelliJ IDEA.<br><br>

    该插件用于在 IntelliJ IDEA 中根据 Java 实体类自动生成 Yapi 接口定义的 JSON 数据与文档，提升接口编写效率。<br><br>

    <em>
    <b>Usage Method 1 / 使用方式一：</b><br>
    在 Controller 方法上方会出现两个按钮：
    <ul>
    <li><b>Generate Document：</b>生成当前接口的 Yapi 文档。</li>
    <li><b>Generate Document (Mock)：</b>生成接口文档并附带 Mock 数据。</li>
    </ul>

    <b>Usage Method 2 / 使用方式二：</b><br>
    在实体类中右键，选择 “Yapi 返回结果生成” 菜单，可自动生成对应的 Yapi JSON 数据结构。<br><br>

    <b>Features / 功能特性：</b>
    <ol>
    <li>支持生成对象返回结果，可选择是否包含 Mock 数据。</li>
    <li>支持生成列表返回结果，可选择是否包含 Mock 数据。</li>
    <li>支持生成请求体对象 JSON，可选择是否包含 Mock 数据。</li>
    </ol>

    <b>Note / 注意：</b><br>
    Mock 数据的生成依赖大语言模型（LLM）支持，请在设置中配置 API Key。<br>
    配置路径：<b>Settings -> Tools -> Yapi_ApiKey</b>
    </em>
    ]]></description>


    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="YapiShowWindow"
                    secondary="true"
                    anchor="right"
                    icon="AllIcons.Toolwindows.ToolWindowJsonPath"
                    factoryClass="com.plugin.demo.windows.YapiShowWindowFactory"/>
        <!--   配置界面   -->
        <!-- parentId配置界面在哪个菜单下，instance指定配置界面的类-->
        <applicationConfigurable parentId="tools" instance="com.plugin.demo.setting.CodeChronoSettingsConfigurable"
                                 id="ApiKey.Config"
                                 displayName="Yapi_ApiKey"/>

        <codeInsight.codeVisionProvider id="YapiProvider" implementation="com.plugin.demo.codeinsight.YapiProvider"/>

        <codeInsight.codeVisionProvider id="YapiMockProvider" implementation="com.plugin.demo.codeinsight.YapiMockProvider"/>

        <codeInsight.codeVisionProvider implementation="com.plugin.demo.codeinsight.YapiSendProvider"/>

    </extensions>

    <actions>

        <!-- 创建父级菜单 -->
        <group id="YapiGenerate.Menu" text="Yapi返回结果生成" popup="true">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <action id="YapiGenerate.Menu.Object"
                    class="com.plugin.demo.action.YapiGenerateAction"
                    text="对象json">
            </action>
            <action id="YapiGenerate.Menu.List"
                    class="com.plugin.demo.action.YapiGenerateActionList"
                    text="列表json">
            </action>
            <action id="YapiGenerate.Menu.ObjectMock"
                    class="com.plugin.demo.action.YapiGenerateActionMock"
                    text="对象json生成mock数据">
            </action>
            <action id="YapiGenerate.Menu.Mock"
                    class="com.plugin.demo.action.YapiGenerateActionListMock"
                    text="列表json生成mock数据">
            </action>
            <action id="YapiGenerate.Menu.RequestBody"
                    class="com.plugin.demo.action.YapiGenerateActionRequestBody"
                    text="请求体json">
            </action>
            <action id="YapiGenerate.Menu.RequestBodyMock"
                    class="com.plugin.demo.action.YapiGenerateActionRequestBodyMock"
                    text="请求体json生成mock数据">
            </action>
        </group>
    </actions>
</idea-plugin>
